@startuml

hide empty attributes
hide empty methods
hide circle


class CurlContext {
   +init()
   +fini()
   +get_handle(): CURL *
   +execute()
}

class CurlExecutor {
   +init()
   #init_options() {abstract}
}
CurlContext *-- CurlExecutor


class EmailSender {
   +send(EmailContent, optional<EmailHeaders>): bool {abstract}
   +reply(EmailContent, EmailData, optional<EmailHeaders>): bool {abstract}
}

class CurlEmailSender {
   +send(EmailContent, optional<EmailHeaders>): bool {abstract}
   +reply(EmailContent, EmailData, optional<EmailHeaders>): bool {abstract}
   #init_options() {abstract}
}
EmailSender <|-- CurlEmailSender
CurlExecutor <|-- CurlEmailSender


class EmailReceiver {
   +get_email(nanoseconds polling_period): optional<EmailData> {abstract}
   +shutdown()
}
class CurlEmailReceiver {
   +get_email(nanoseconds polling_period): optional<EmailData> {abstract
   #init_options() {abstract}
   -get_nextuid(): optional<int>
   -get_email_from_uid(int): optional<EmailData>
   -execute(optional<string>, url_options, optional<string> custom_request): optional<string>
}
EmailReceiver <|-- CurlEmailReceiver
CurlExecutor <|-- CurlEmailReceiver


class IntraEmailReceiver {
   -emails: queue<EmailData>
   +get_email(nanoseconds polling_period): optional<EmailData> {abstract}
   +receive(EmailData data)
}
EmailReceiver <|-- IntraEmailReceiver

class IntraEmailSender {
   +send(EmailContent, optional<EmailHeaders>): bool {abstract}
   +reply(EmailContent, EmailData, optional<EmailHeaders>): bool {abstract}
}
EmailSender <|-- IntraEmailSender
IntraEmailReceiver o-- IntraEmailSender

EmailSender -right[hidden]- EmailReceiver

@enduml