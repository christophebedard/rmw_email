<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classemail_1_1IntraEmailSender" kind="class" language="C++" prot="public">
    <compoundname>email::IntraEmailSender</compoundname>
    <basecompoundref refid="classemail_1_1EmailSender" prot="public" virt="non-virtual">email::EmailSender</basecompoundref>
    <includes local="no">intra_sender.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classemail_1_1IntraEmailSender_1a4e47a77dc1e005c1466e7049901a143b" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classemail_1_1IntraEmailReceiver" kindref="compound">IntraEmailReceiver</ref> &gt;</type>
        <definition>std::shared_ptr&lt;IntraEmailReceiver&gt; email::IntraEmailSender::receiver_</definition>
        <argsstring></argsstring>
        <name>receiver_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_sender.hpp" line="69" column="19" bodyfile="include/email/email/intra_sender.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemail_1_1IntraEmailSender_1a03df28380c1239b4487982932bdd0790" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string email::IntraEmailSender::from_</definition>
        <argsstring></argsstring>
        <name>from_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_sender.hpp" line="70" column="21" bodyfile="include/email/email/intra_sender.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemail_1_1IntraEmailSender_1a9fe3e7d246a35dfdc08633e4951a2087" prot="private" static="no" mutable="no">
        <type>const struct <ref refid="structemail_1_1EmailRecipients" kindref="compound">EmailRecipients</ref></type>
        <definition>const struct EmailRecipients email::IntraEmailSender::recipients_</definition>
        <argsstring></argsstring>
        <name>recipients_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_sender.hpp" line="70" column="21" bodyfile="include/email/email/intra_sender.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classemail_1_1IntraEmailSender_1adb317c2f33b19f554f508463530c800c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>email::IntraEmailSender::IntraEmailSender</definition>
        <argsstring>(std::shared_ptr&lt; IntraEmailReceiver &gt; receiver)</argsstring>
        <name>IntraEmailSender</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classemail_1_1IntraEmailReceiver" kindref="compound">IntraEmailReceiver</ref> &gt;</type>
          <declname>receiver</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>the intraprocess email receiver </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_sender.hpp" line="42" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1IntraEmailSender_1a6a9406be1e44e4e1def10e5577d69031" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual email::IntraEmailSender::~IntraEmailSender</definition>
        <argsstring>()</argsstring>
        <name>~IntraEmailSender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_sender.hpp" line="45" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1IntraEmailSender_1acf49287658ab7a3325ac99b4d6eb68ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool email::IntraEmailSender::send</definition>
        <argsstring>(const struct EmailContent &amp;content, std::optional&lt; EmailHeaders &gt; additional_headers=std::nullopt)</argsstring>
        <name>send</name>
        <reimplements refid="classemail_1_1EmailSender_1a12487f6d865d3839438cfb0814bbf1ec">send</reimplements>
        <param>
          <type>const struct <ref refid="structemail_1_1EmailContent" kindref="compound">EmailContent</ref> &amp;</type>
          <declname>content</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="namespaceemail_1ae41e6fb7cb5a3b87ee3effdc2aa2065f" kindref="member">EmailHeaders</ref> &gt;</type>
          <declname>additional_headers</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Send an email. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>the content </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>additional_headers</parametername>
</parameternamelist>
<parameterdescription>
<para>the optional additional headers to include in the email </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_sender.hpp" line="50" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1IntraEmailSender_1acf01f816b22eee5c16173f6c7dedaafd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool email::IntraEmailSender::reply</definition>
        <argsstring>(const struct EmailContent &amp;content, const struct EmailData &amp;email, std::optional&lt; EmailHeaders &gt; additional_headers=std::nullopt)</argsstring>
        <name>reply</name>
        <reimplements refid="classemail_1_1EmailSender_1ad7b5de33bdb15b17f88cfccde80aa881">reply</reimplements>
        <param>
          <type>const struct <ref refid="structemail_1_1EmailContent" kindref="compound">EmailContent</ref> &amp;</type>
          <declname>content</declname>
        </param>
        <param>
          <type>const struct <ref refid="structemail_1_1EmailData" kindref="compound">EmailData</ref> &amp;</type>
          <declname>email</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="namespaceemail_1ae41e6fb7cb5a3b87ee3effdc2aa2065f" kindref="member">EmailHeaders</ref> &gt;</type>
          <declname>additional_headers</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Reply to an email. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>the content </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>email</parametername>
</parameternamelist>
<parameterdescription>
<para>the email to reply to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>additional_headers</parametername>
</parameternamelist>
<parameterdescription>
<para>the optional additional headers to include in the email </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_sender.hpp" line="57" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classemail_1_1IntraEmailSender_1acdcd14da7af440fa29d8c28848cf930c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool email::IntraEmailSender::send_email_data</definition>
        <argsstring>(const struct EmailData &amp;data)</argsstring>
        <name>send_email_data</name>
        <param>
          <type>const struct <ref refid="structemail_1_1EmailData" kindref="compound">EmailData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Send email data to receiver. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_sender.hpp" line="67" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Intraprocess email sender. </para>
    </briefdescription>
    <detaileddescription>
<para>Simply builds an email object and sends it to the intraprocess email receiver. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>email::IntraEmailSender</label>
        <link refid="classemail_1_1IntraEmailSender"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>email::EmailSender</label>
        <link refid="classemail_1_1EmailSender"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>email::IntraEmailSender</label>
        <link refid="classemail_1_1IntraEmailSender"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>email::EmailSender</label>
        <link refid="classemail_1_1EmailSender"/>
      </node>
    </collaborationgraph>
    <location file="include/email/email/intra_sender.hpp" line="34" column="1" bodyfile="include/email/email/intra_sender.hpp" bodystart="35" bodyend="72"/>
    <listofallmembers>
      <member refid="classemail_1_1EmailSender_1a6a067e65d5a0c78bd30217eaab577420" prot="public" virt="non-virtual"><scope>email::IntraEmailSender</scope><name>EmailSender</name></member>
      <member refid="classemail_1_1IntraEmailSender_1a03df28380c1239b4487982932bdd0790" prot="private" virt="non-virtual"><scope>email::IntraEmailSender</scope><name>from_</name></member>
      <member refid="classemail_1_1IntraEmailSender_1adb317c2f33b19f554f508463530c800c" prot="public" virt="non-virtual"><scope>email::IntraEmailSender</scope><name>IntraEmailSender</name></member>
      <member refid="classemail_1_1EmailSender_1af10fd3a823d5f5355f6cd3a784a7d3d8" prot="protected" virt="non-virtual"><scope>email::IntraEmailSender</scope><name>logger</name></member>
      <member refid="classemail_1_1IntraEmailSender_1a4e47a77dc1e005c1466e7049901a143b" prot="private" virt="non-virtual"><scope>email::IntraEmailSender</scope><name>receiver_</name></member>
      <member refid="classemail_1_1IntraEmailSender_1a9fe3e7d246a35dfdc08633e4951a2087" prot="private" virt="non-virtual"><scope>email::IntraEmailSender</scope><name>recipients_</name></member>
      <member refid="classemail_1_1IntraEmailSender_1acf01f816b22eee5c16173f6c7dedaafd" prot="public" virt="virtual"><scope>email::IntraEmailSender</scope><name>reply</name></member>
      <member refid="classemail_1_1IntraEmailSender_1acf49287658ab7a3325ac99b4d6eb68ee" prot="public" virt="virtual"><scope>email::IntraEmailSender</scope><name>send</name></member>
      <member refid="classemail_1_1IntraEmailSender_1acdcd14da7af440fa29d8c28848cf930c" prot="private" virt="non-virtual"><scope>email::IntraEmailSender</scope><name>send_email_data</name></member>
      <member refid="classemail_1_1EmailSender_1a84b1193de252540aca30a78973f30ff9" prot="public" virt="virtual"><scope>email::IntraEmailSender</scope><name>~EmailSender</name></member>
      <member refid="classemail_1_1IntraEmailSender_1a6a9406be1e44e4e1def10e5577d69031" prot="public" virt="virtual"><scope>email::IntraEmailSender</scope><name>~IntraEmailSender</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
