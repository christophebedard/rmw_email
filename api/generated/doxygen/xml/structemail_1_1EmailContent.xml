<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structemail_1_1EmailContent" kind="struct" language="C++" prot="public">
    <compoundname>email::EmailContent</compoundname>
    <includes local="no">info.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structemail_1_1EmailContent_1a77bd9eb7cbea591d799bcc305e43b611" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string email::EmailContent::subject</definition>
        <argsstring></argsstring>
        <name>subject</name>
        <briefdescription>
<para>Subject, which should be one line without any newlines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/info.hpp" line="90" column="15" bodyfile="include/email/email/info.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structemail_1_1EmailContent_1aee35c198a24df4a44429242f2349f252" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string email::EmailContent::body</definition>
        <argsstring></argsstring>
        <name>body</name>
        <briefdescription>
<para>Body/content, which may have multiple lines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/info.hpp" line="92" column="15" bodyfile="include/email/email/info.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structemail_1_1EmailContent_1af724d227f2cde94a19ca2881ca257d54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>email::EmailContent::EmailContent</definition>
        <argsstring>(const std::string &amp;subject_, const std::string &amp;body_)</argsstring>
        <name>EmailContent</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>subject_</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>body_</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/info.hpp" line="94" column="3" bodyfile="include/email/email/info.hpp" bodystart="94" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structemail_1_1EmailContent_1a7ad63ee616d71ace6311eb40899c3e7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>email::EmailContent::EmailContent</definition>
        <argsstring>(const EmailContent &amp;)=default</argsstring>
        <name>EmailContent</name>
        <param>
          <type>const <ref refid="structemail_1_1EmailContent" kindref="compound">EmailContent</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/info.hpp" line="100" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Content of an email. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/email/email/info.hpp" line="87" column="1" bodyfile="include/email/email/info.hpp" bodystart="88" bodyend="101"/>
    <listofallmembers>
      <member refid="structemail_1_1EmailContent_1aee35c198a24df4a44429242f2349f252" prot="public" virt="non-virtual"><scope>email::EmailContent</scope><name>body</name></member>
      <member refid="structemail_1_1EmailContent_1af724d227f2cde94a19ca2881ca257d54" prot="public" virt="non-virtual"><scope>email::EmailContent</scope><name>EmailContent</name></member>
      <member refid="structemail_1_1EmailContent_1a7ad63ee616d71ace6311eb40899c3e7a" prot="public" virt="non-virtual"><scope>email::EmailContent</scope><name>EmailContent</name></member>
      <member refid="structemail_1_1EmailContent_1a77bd9eb7cbea591d799bcc305e43b611" prot="public" virt="non-virtual"><scope>email::EmailContent</scope><name>subject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
