<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classemail_1_1ServiceServer" kind="class" language="C++" prot="public">
    <compoundname>email::ServiceServer</compoundname>
    <basecompoundref refid="classemail_1_1ServiceObject" prot="public" virt="non-virtual">email::ServiceObject</basecompoundref>
    <includes local="no">service_server.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classemail_1_1ServiceServer_1a2579aa9e76d95074cd0241f4866e31f5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="namespaceemail_1a8d76c558a86ae3983f1b8f138c036e61" kindref="member">Logger</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Logger&gt; email::ServiceServer::logger_</definition>
        <argsstring></argsstring>
        <name>logger_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_server.hpp" line="92" column="19" bodyfile="include/email/service_server.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemail_1_1ServiceServer_1a2c20114f9b689f766e526a07dbbb0b0a" prot="private" static="no" mutable="no">
        <type>ServiceHandler::RequestQueue::SharedPtr</type>
        <definition>ServiceHandler::RequestQueue::SharedPtr email::ServiceServer::requests_</definition>
        <argsstring></argsstring>
        <name>requests_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_server.hpp" line="93" column="43" bodyfile="include/email/service_server.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemail_1_1ServiceServer_1a234178fbaf92e09b757305df1fa2b077" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classemail_1_1EmailSender" kindref="compound">EmailSender</ref> &gt;</type>
        <definition>std::shared_ptr&lt;EmailSender&gt; email::ServiceServer::sender_</definition>
        <argsstring></argsstring>
        <name>sender_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_server.hpp" line="94" column="19" bodyfile="include/email/service_server.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemail_1_1ServiceServer_1a32e3818a762f7a6358a7dd694e8bb38f" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceemail_1a0de800b4ba159d6e3892ce756a690103" kindref="member">SequenceNumber</ref>, struct <ref refid="structemail_1_1EmailData" kindref="compound">EmailData</ref> &gt;</type>
        <definition>std::map&lt;SequenceNumber, struct EmailData&gt; email::ServiceServer::requests_raw_</definition>
        <argsstring></argsstring>
        <name>requests_raw_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_server.hpp" line="95" column="12" bodyfile="include/email/service_server.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classemail_1_1ServiceServer_1abba58df55b0930d3f33741ffa8950d3f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>email::ServiceServer::ServiceServer</definition>
        <argsstring>(const std::string &amp;service_name)</argsstring>
        <name>ServiceServer</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>service_name</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>service_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the service name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_server.hpp" line="51" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1ServiceServer_1aad38fdd9a7af24307b11d0550700a556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>email::ServiceServer::~ServiceServer</definition>
        <argsstring>()</argsstring>
        <name>~ServiceServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_server.hpp" line="54" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1ServiceServer_1a5f9a2b5d05d50b4cfe890ebfd077d509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool email::ServiceServer::has_request</definition>
        <argsstring>()</argsstring>
        <name>has_request</name>
        <briefdescription>
<para>Check if the server has an available request. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if there is an available request, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_server.hpp" line="62" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1ServiceServer_1a35e70cc848d14c82cd6185499998af36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; struct <ref refid="structemail_1_1ServiceRequest" kindref="compound">ServiceRequest</ref> &gt;</type>
        <definition>std::optional&lt;struct ServiceRequest&gt; email::ServiceServer::get_request</definition>
        <argsstring>()</argsstring>
        <name>get_request</name>
        <briefdescription>
<para>Get a request if there is one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the request, or <computeroutput>std::nullopt</computeroutput> if there is none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_server.hpp" line="70" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1ServiceServer_1a61296d41cf3f59fafcf5aa87e51e81e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::pair&lt; struct <ref refid="structemail_1_1ServiceRequest" kindref="compound">ServiceRequest</ref>, <ref refid="classemail_1_1ServiceInfo" kindref="compound">ServiceInfo</ref> &gt; &gt;</type>
        <definition>std::optional&lt;std::pair&lt;struct ServiceRequest, ServiceInfo&gt; &gt; email::ServiceServer::get_request_with_info</definition>
        <argsstring>()</argsstring>
        <name>get_request_with_info</name>
        <briefdescription>
<para>Get a request with info if there is one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the request with info, or <computeroutput>std::nullopt</computeroutput> if there is none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_server.hpp" line="78" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1ServiceServer_1a47867e8fbd4b21d56681e39f82635ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void email::ServiceServer::send_response</definition>
        <argsstring>(const struct ServiceRequestId &amp;request_id, const std::string &amp;response)</argsstring>
        <name>send_response</name>
        <param>
          <type>const struct <ref refid="structemail_1_1ServiceRequestId" kindref="compound">ServiceRequestId</ref> &amp;</type>
          <declname>request_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>Send response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>request_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the original request ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>the response </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_server.hpp" line="87" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Service server. </para>
    </briefdescription>
    <detaileddescription>
<para>Gets a request from a client and sends a response. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>email::GidObject</label>
        <link refid="classemail_1_1GidObject"/>
      </node>
      <node id="2">
        <label>email::ServiceObject</label>
        <link refid="classemail_1_1ServiceObject"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>email::ServiceServer</label>
        <link refid="classemail_1_1ServiceServer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>email::NamedObject</label>
        <link refid="classemail_1_1NamedObject"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>email::GidObject</label>
        <link refid="classemail_1_1GidObject"/>
      </node>
      <node id="2">
        <label>email::ServiceObject</label>
        <link refid="classemail_1_1ServiceObject"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>email::ServiceServer</label>
        <link refid="classemail_1_1ServiceServer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>email::NamedObject</label>
        <link refid="classemail_1_1NamedObject"/>
      </node>
    </collaborationgraph>
    <location file="include/email/service_server.hpp" line="43" column="1" bodyfile="include/email/service_server.hpp" bodystart="44" bodyend="96"/>
    <listofallmembers>
      <member refid="classemail_1_1GidObject_1a8606636aba92bce5b2c81ae0e0289d8e" prot="public" virt="non-virtual"><scope>email::ServiceServer</scope><name>get_gid</name></member>
      <member refid="classemail_1_1NamedObject_1a73cb596f0cb6c525566738fea946ae3a" prot="protected" virt="non-virtual"><scope>email::ServiceServer</scope><name>get_object_name</name></member>
      <member refid="classemail_1_1ServiceServer_1a35e70cc848d14c82cd6185499998af36" prot="public" virt="non-virtual"><scope>email::ServiceServer</scope><name>get_request</name></member>
      <member refid="classemail_1_1ServiceServer_1a61296d41cf3f59fafcf5aa87e51e81e6" prot="public" virt="non-virtual"><scope>email::ServiceServer</scope><name>get_request_with_info</name></member>
      <member refid="classemail_1_1ServiceObject_1a7f96bf4bb03c956939682468cd5dd4ea" prot="public" virt="non-virtual"><scope>email::ServiceServer</scope><name>get_service_name</name></member>
      <member refid="classemail_1_1GidObject_1a29ebb428c2827e00fe71660de6721c5e" prot="protected" virt="non-virtual"><scope>email::ServiceServer</scope><name>GidObject</name></member>
      <member refid="classemail_1_1NamedObject_1a41b4dd034b6ebdbf1bbde94d595d30fa" prot="protected" virt="non-virtual"><scope>email::ServiceServer</scope><name>has_newline</name></member>
      <member refid="classemail_1_1ServiceServer_1a5f9a2b5d05d50b4cfe890ebfd077d509" prot="public" virt="non-virtual"><scope>email::ServiceServer</scope><name>has_request</name></member>
      <member refid="classemail_1_1ServiceServer_1a2579aa9e76d95074cd0241f4866e31f5" prot="private" virt="non-virtual"><scope>email::ServiceServer</scope><name>logger_</name></member>
      <member refid="classemail_1_1NamedObject_1a0f9a29567389176f23b61b8d0d71e774" prot="protected" virt="non-virtual"><scope>email::ServiceServer</scope><name>NamedObject</name></member>
      <member refid="classemail_1_1ServiceServer_1a2c20114f9b689f766e526a07dbbb0b0a" prot="private" virt="non-virtual"><scope>email::ServiceServer</scope><name>requests_</name></member>
      <member refid="classemail_1_1ServiceServer_1a32e3818a762f7a6358a7dd694e8bb38f" prot="private" virt="non-virtual"><scope>email::ServiceServer</scope><name>requests_raw_</name></member>
      <member refid="classemail_1_1ServiceServer_1a47867e8fbd4b21d56681e39f82635ca3" prot="public" virt="non-virtual"><scope>email::ServiceServer</scope><name>send_response</name></member>
      <member refid="classemail_1_1ServiceServer_1a234178fbaf92e09b757305df1fa2b077" prot="private" virt="non-virtual"><scope>email::ServiceServer</scope><name>sender_</name></member>
      <member refid="classemail_1_1ServiceObject_1a6adfe99b703c35e74156ecd4336cd2da" prot="protected" virt="non-virtual"><scope>email::ServiceServer</scope><name>ServiceObject</name></member>
      <member refid="classemail_1_1ServiceServer_1abba58df55b0930d3f33741ffa8950d3f" prot="public" virt="non-virtual"><scope>email::ServiceServer</scope><name>ServiceServer</name></member>
      <member refid="classemail_1_1GidObject_1a8fce88afdc622182418d32b1c43cc17b" prot="protected" virt="virtual"><scope>email::ServiceServer</scope><name>~GidObject</name></member>
      <member refid="classemail_1_1NamedObject_1ab6de668d7cc2c1eefda15c5822599a46" prot="protected" virt="virtual"><scope>email::ServiceServer</scope><name>~NamedObject</name></member>
      <member refid="classemail_1_1ServiceObject_1a96f6d5e8cd18f0e2ec7f1229fdd6f110" prot="protected" virt="virtual"><scope>email::ServiceServer</scope><name>~ServiceObject</name></member>
      <member refid="classemail_1_1ServiceServer_1aad38fdd9a7af24307b11d0550700a556" prot="public" virt="non-virtual"><scope>email::ServiceServer</scope><name>~ServiceServer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
