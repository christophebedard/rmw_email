<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="email_2info_8hpp" kind="file" language="C++">
    <compoundname>info.hpp</compoundname>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">optional</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="yes">spdlog/fmt/fmt.h</includes>
    <includes refid="macros_8hpp" local="yes">email/macros.hpp</includes>
    <includedby refid="communication__info_8hpp" local="yes">include/email/communication_info.hpp</includedby>
    <includedby refid="context_8hpp" local="yes">include/email/context.hpp</includedby>
    <includedby refid="curl__receiver_8hpp" local="yes">include/email/email/curl_receiver.hpp</includedby>
    <includedby refid="curl__sender_8hpp" local="yes">include/email/email/curl_sender.hpp</includedby>
    <includedby refid="handler_8hpp" local="yes">include/email/email/handler.hpp</includedby>
    <includedby refid="intra__receiver_8hpp" local="yes">include/email/email/intra_receiver.hpp</includedby>
    <includedby refid="intra__sender_8hpp" local="yes">include/email/email/intra_sender.hpp</includedby>
    <includedby refid="payload__utils_8hpp" local="yes">include/email/email/payload_utils.hpp</includedby>
    <includedby refid="polling__manager_8hpp" local="yes">include/email/email/polling_manager.hpp</includedby>
    <includedby refid="receiver_8hpp" local="yes">include/email/email/receiver.hpp</includedby>
    <includedby refid="response__utils_8hpp" local="yes">include/email/email/response_utils.hpp</includedby>
    <includedby refid="sender_8hpp" local="yes">include/email/email/sender.hpp</includedby>
    <includedby refid="message__info_8hpp" local="yes">include/email/message_info.hpp</includedby>
    <includedby refid="options_8hpp" local="yes">include/email/options.hpp</includedby>
    <includedby refid="publisher_8hpp" local="yes">include/email/publisher.hpp</includedby>
    <includedby refid="service__handler_8hpp" local="yes">include/email/service_handler.hpp</includedby>
    <includedby refid="service__info_8hpp" local="yes">include/email/service_info.hpp</includedby>
    <includedby refid="service__server_8hpp" local="yes">include/email/service_server.hpp</includedby>
    <includedby refid="subscription_8hpp" local="yes">include/email/subscription.hpp</includedby>
    <includedby refid="subscription__handler_8hpp" local="yes">include/email/subscription_handler.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/email/email/info.hpp</label>
        <link refid="email_2info_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="8">
        <label>email/macros.hpp</label>
        <link refid="macros_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>optional</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="7">
        <label>spdlog/fmt/fmt.h</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/email/email/info.hpp</label>
        <link refid="email_2info_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/email/email.hpp</label>
        <link refid="email_8hpp"/>
      </node>
      <node id="13">
        <label>include/email/service_server.hpp</label>
        <link refid="service__server_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>include/email/email/curl_receiver.hpp</label>
        <link refid="curl__receiver_8hpp"/>
      </node>
      <node id="24">
        <label>include/email/email/sender.hpp</label>
        <link refid="sender_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/email/subscription.hpp</label>
        <link refid="subscription_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>include/email/service_client.hpp</label>
        <link refid="service__client_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/email/communication_info.hpp</label>
        <link refid="communication__info_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/email/wait_set.hpp</label>
        <link refid="wait__set_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>include/email/service_handler.hpp</label>
        <link refid="service__handler_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>include/email/email/handler.hpp</label>
        <link refid="handler_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>include/email/email/curl_sender.hpp</label>
        <link refid="curl__sender_8hpp"/>
      </node>
      <node id="18">
        <label>include/email/email/intra_receiver.hpp</label>
        <link refid="intra__receiver_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/email/wait.hpp</label>
        <link refid="wait_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>include/email/service_info.hpp</label>
        <link refid="service__info_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>include/email/email/polling_manager.hpp</label>
        <link refid="polling__manager_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/email/subscription_handler.hpp</label>
        <link refid="subscription__handler_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>include/email/service_request.hpp</label>
        <link refid="service__request_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>include/email/email/payload_utils.hpp</label>
        <link refid="payload__utils_8hpp"/>
      </node>
      <node id="22">
        <label>include/email/email/receiver.hpp</label>
        <link refid="receiver_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>include/email/email/intra_sender.hpp</label>
        <link refid="intra__sender_8hpp"/>
      </node>
      <node id="9">
        <label>include/email/context.hpp</label>
        <link refid="context_8hpp"/>
      </node>
      <node id="23">
        <label>include/email/email/response_utils.hpp</label>
        <link refid="response__utils_8hpp"/>
      </node>
      <node id="25">
        <label>include/email/publisher.hpp</label>
        <link refid="publisher_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/email/message_info.hpp</label>
        <link refid="message__info_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>include/email/options.hpp</label>
        <link refid="options_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structemail_1_1UserInfo" prot="public">email::UserInfo</innerclass>
    <innerclass refid="structemail_1_1EmailRecipients" prot="public">email::EmailRecipients</innerclass>
    <innerclass refid="structemail_1_1EmailContent" prot="public">email::EmailContent</innerclass>
    <innerclass refid="structemail_1_1EmailData" prot="public">email::EmailData</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01email_1_1EmailRecipients_01_4" prot="public">fmt::formatter&lt; email::EmailRecipients &gt;</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01email_1_1EmailContent_01_4" prot="public">fmt::formatter&lt; email::EmailContent &gt;</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01email_1_1EmailHeaders_01_4" prot="public">fmt::formatter&lt; email::EmailHeaders &gt;</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01email_1_1EmailData_01_4" prot="public">fmt::formatter&lt; email::EmailData &gt;</innerclass>
    <innernamespace refid="namespaceemail">email</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2020<sp/>Christophe<sp/>Bedard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EMAIL__EMAIL__INFO_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMAIL__EMAIL__INFO_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT<sp/>cpplint<sp/>mistakes<sp/>&lt;optional&gt;<sp/>for<sp/>a<sp/>C<sp/>system<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spdlog/fmt/fmt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="macros_8hpp" kindref="compound">email/macros.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceemail" kindref="compound">email</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structemail_1_1UserInfo" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structemail_1_1UserInfo" kindref="compound">UserInfo</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structemail_1_1UserInfo_1a9a7c93eb5a5fad244eb3699f361ae666" kindref="member">host_smtp</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structemail_1_1UserInfo_1aa810688adcf8ce581af198d138b1a3f5" kindref="member">host_imap</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structemail_1_1UserInfo_1abe9be20a65e424a216f61fae0cf50078" kindref="member">username</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structemail_1_1UserInfo_1adb5cc631ca7e5c0669685b5faf9fcef9" kindref="member">password</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="structemail_1_1UserInfo_1a079c1b6f41d419aac969bf43a9ca81f8" kindref="member">UserInfo</ref>(</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>host_smtp_,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>host_imap_,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>username_,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>password_)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="structemail_1_1UserInfo_1a9a7c93eb5a5fad244eb3699f361ae666" kindref="member">host_smtp</ref>(host_smtp_),<sp/><ref refid="structemail_1_1UserInfo_1aa810688adcf8ce581af198d138b1a3f5" kindref="member">host_imap</ref>(host_imap_),<sp/><ref refid="structemail_1_1UserInfo_1abe9be20a65e424a216f61fae0cf50078" kindref="member">username</ref>(username_),<sp/><ref refid="structemail_1_1UserInfo_1adb5cc631ca7e5c0669685b5faf9fcef9" kindref="member">password</ref>(password_)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="structemail_1_1UserInfo_1a079c1b6f41d419aac969bf43a9ca81f8" kindref="member">UserInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structemail_1_1UserInfo" kindref="compound">UserInfo</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="macros_8hpp_1a63182df5328e6f5ffc3eb22859132adf" kindref="member">EMAIL_SHARED_PTR_CONST</ref>(<ref refid="structemail_1_1UserInfo" kindref="compound">UserInfo</ref>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structemail_1_1EmailRecipients" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structemail_1_1EmailRecipients" kindref="compound">EmailRecipients</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="structemail_1_1EmailRecipients_1a0f5c1ef98bc6030b7026b9ff7250e466" kindref="member">to</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="structemail_1_1EmailRecipients_1a1abf873bc70b6d1ebb3817d7c2977808" kindref="member">cc</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="structemail_1_1EmailRecipients_1a9255bf9879cfa1748d17d142b84fb18f" kindref="member">bcc</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="structemail_1_1EmailRecipients_1a879ed18bb87c9a7b45d4cd050eb636e0" kindref="member">EmailRecipients</ref>(</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;<sp/>to_,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;<sp/>cc_,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;<sp/>bcc_)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="structemail_1_1EmailRecipients_1a0f5c1ef98bc6030b7026b9ff7250e466" kindref="member">to</ref>(to_),<sp/><ref refid="structemail_1_1EmailRecipients_1a1abf873bc70b6d1ebb3817d7c2977808" kindref="member">cc</ref>(cc_),<sp/><ref refid="structemail_1_1EmailRecipients_1a9255bf9879cfa1748d17d142b84fb18f" kindref="member">bcc</ref>(bcc_)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structemail_1_1EmailRecipients_1a879ed18bb87c9a7b45d4cd050eb636e0" kindref="member">EmailRecipients</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>to_)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="structemail_1_1EmailRecipients_1a0f5c1ef98bc6030b7026b9ff7250e466" kindref="member">to</ref>({to_}),<sp/><ref refid="structemail_1_1EmailRecipients_1a1abf873bc70b6d1ebb3817d7c2977808" kindref="member">cc</ref>(),<sp/><ref refid="structemail_1_1EmailRecipients_1a9255bf9879cfa1748d17d142b84fb18f" kindref="member">bcc</ref>()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="structemail_1_1EmailRecipients_1a879ed18bb87c9a7b45d4cd050eb636e0" kindref="member">EmailRecipients</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structemail_1_1EmailRecipients" kindref="compound">EmailRecipients</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="macros_8hpp_1a63182df5328e6f5ffc3eb22859132adf" kindref="member">EMAIL_SHARED_PTR_CONST</ref>(<ref refid="structemail_1_1EmailRecipients" kindref="compound">EmailRecipients</ref>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/><ref refid="namespaceemail_1ae41e6fb7cb5a3b87ee3effdc2aa2065f" kindref="member">EmailHeaders</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>EmailHeaders::value_type<sp/><ref refid="namespaceemail_1a79f0f6247c3270688400eb20c9564c96" kindref="member">EmailHeader</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structemail_1_1EmailContent" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structemail_1_1EmailContent" kindref="compound">EmailContent</ref></highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structemail_1_1EmailContent_1a77bd9eb7cbea591d799bcc305e43b611" kindref="member">subject</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structemail_1_1EmailContent_1aee35c198a24df4a44429242f2349f252" kindref="member">body</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="structemail_1_1EmailContent_1af724d227f2cde94a19ca2881ca257d54" kindref="member">EmailContent</ref>(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>subject_,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>body_)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="structemail_1_1EmailContent_1a77bd9eb7cbea591d799bcc305e43b611" kindref="member">subject</ref>(subject_),<sp/><ref refid="structemail_1_1EmailContent_1aee35c198a24df4a44429242f2349f252" kindref="member">body</ref>(body_)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="structemail_1_1EmailContent_1af724d227f2cde94a19ca2881ca257d54" kindref="member">EmailContent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structemail_1_1EmailContent" kindref="compound">EmailContent</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="structemail_1_1EmailData" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structemail_1_1EmailData" kindref="compound">EmailData</ref></highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structemail_1_1EmailData_1ae160e414dfee99357f5a2e0252ac1278" kindref="member">message_id</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structemail_1_1EmailData_1ab897397c43749238bb5b120f94558844" kindref="member">in_reply_to</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structemail_1_1EmailData_1a2e5bee79a2fd21d2f47090eb3c84c08b" kindref="member">from</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structemail_1_1EmailRecipients" kindref="compound">EmailRecipients</ref><sp/><ref refid="structemail_1_1EmailData_1a10accb9e498602cf7841471741e41fdd" kindref="member">recipients</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structemail_1_1EmailContent" kindref="compound">EmailContent</ref><sp/><ref refid="structemail_1_1EmailData_1a04533d7a6670f809da51c335c7449a01" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="namespaceemail_1ae41e6fb7cb5a3b87ee3effdc2aa2065f" kindref="member">EmailHeaders</ref><sp/><ref refid="structemail_1_1EmailData_1aad420bf006f31f4a9f6a95db90581f49" kindref="member">additional_headers</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="structemail_1_1EmailData_1a9f77470450820644aaa39f4f56cd0600" kindref="member">EmailData</ref>(</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>message_id_,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>in_reply_to_,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>from_,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structemail_1_1EmailRecipients" kindref="compound">EmailRecipients</ref><sp/>&amp;<sp/>recipients_,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structemail_1_1EmailContent" kindref="compound">EmailContent</ref><sp/>&amp;<sp/>content_,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;EmailHeaders&gt;<sp/>additional_headers_<sp/>=<sp/>std::nullopt)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="structemail_1_1EmailData_1ae160e414dfee99357f5a2e0252ac1278" kindref="member">message_id</ref>(message_id_),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structemail_1_1EmailData_1ab897397c43749238bb5b120f94558844" kindref="member">in_reply_to</ref>(in_reply_to_),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structemail_1_1EmailData_1a2e5bee79a2fd21d2f47090eb3c84c08b" kindref="member">from</ref>(from_),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structemail_1_1EmailData_1a10accb9e498602cf7841471741e41fdd" kindref="member">recipients</ref>(recipients_),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structemail_1_1EmailData_1a04533d7a6670f809da51c335c7449a01" kindref="member">content</ref>(content_),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structemail_1_1EmailData_1aad420bf006f31f4a9f6a95db90581f49" kindref="member">additional_headers</ref>(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>additional_headers_.has_value()<sp/>?<sp/>additional_headers_.value()<sp/>:<sp/><ref refid="namespaceemail_1ae41e6fb7cb5a3b87ee3effdc2aa2065f" kindref="member">EmailHeaders</ref>{})</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="structemail_1_1EmailData_1a9f77470450820644aaa39f4f56cd0600" kindref="member">EmailData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structemail_1_1EmailData" kindref="compound">EmailData</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>email</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="142" refid="structfmt_1_1formatter_3_01email_1_1EmailRecipients_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fmt::formatter&lt;<ref refid="namespaceemail" kindref="compound">email</ref>::EmailRecipients&gt;:<sp/>formatter&lt;string_view&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structemail_1_1EmailRecipients" kindref="compound">email::EmailRecipients</ref><sp/>&amp;<sp/>r,<sp/>FormatContext<sp/>&amp;<sp/>ctx)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>formatter&lt;string_view&gt;::format(</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;To:<sp/>{}\nCc:<sp/>{}\nBcc:<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::join(r.<ref refid="structemail_1_1EmailRecipients_1a0f5c1ef98bc6030b7026b9ff7250e466" kindref="member">to</ref>,<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::join(r.<ref refid="structemail_1_1EmailRecipients_1a1abf873bc70b6d1ebb3817d7c2977808" kindref="member">cc</ref>,<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::join(r.<ref refid="structemail_1_1EmailRecipients_1a9255bf9879cfa1748d17d142b84fb18f" kindref="member">bcc</ref>,<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ctx);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="159" refid="structfmt_1_1formatter_3_01email_1_1EmailContent_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fmt::formatter&lt;<ref refid="namespaceemail" kindref="compound">email</ref>::EmailContent&gt;:<sp/>formatter&lt;string_view&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structemail_1_1EmailContent" kindref="compound">email::EmailContent</ref><sp/>&amp;<sp/>c,<sp/>FormatContext<sp/>&amp;<sp/>ctx)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>formatter&lt;string_view&gt;::format(</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;Subject:<sp/>{}\n\n{}\n&quot;</highlight><highlight class="normal">,<sp/>c.<ref refid="structemail_1_1EmailContent_1a77bd9eb7cbea591d799bcc305e43b611" kindref="member">subject</ref>,<sp/>c.<ref refid="structemail_1_1EmailContent_1aee35c198a24df4a44429242f2349f252" kindref="member">body</ref>),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ctx);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="172" refid="structfmt_1_1formatter_3_01email_1_1EmailHeaders_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fmt::formatter&lt;<ref refid="namespaceemail" kindref="compound">email</ref>::<ref refid="namespaceemail_1ae41e6fb7cb5a3b87ee3effdc2aa2065f" kindref="member">EmailHeaders</ref>&gt;:<sp/>formatter&lt;string_view&gt;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceemail_1ae41e6fb7cb5a3b87ee3effdc2aa2065f" kindref="member">email::EmailHeaders</ref><sp/>&amp;<sp/>h,<sp/>FormatContext<sp/>&amp;<sp/>ctx)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(christophebedard)<sp/>improve<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>[k,<sp/>v]<sp/>:<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>k,<sp/>v);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>formatter&lt;string_view&gt;::format(str,<sp/>ctx);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal">};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="194" refid="structfmt_1_1formatter_3_01email_1_1EmailData_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fmt::formatter&lt;<ref refid="namespaceemail" kindref="compound">email</ref>::EmailData&gt;:<sp/>formatter&lt;string_view&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structemail_1_1EmailData" kindref="compound">email::EmailData</ref><sp/>&amp;<sp/>d,<sp/>FormatContext<sp/>&amp;<sp/>ctx)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>formatter&lt;string_view&gt;::format(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{}\nMessage-Id:<sp/>{}\nIn-Reply-To:<sp/>{}\nFrom:<sp/>{}\n{}\n{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.<ref refid="structemail_1_1EmailData_1aad420bf006f31f4a9f6a95db90581f49" kindref="member">additional_headers</ref>,<sp/>d.<ref refid="structemail_1_1EmailData_1ae160e414dfee99357f5a2e0252ac1278" kindref="member">message_id</ref>,<sp/>d.<ref refid="structemail_1_1EmailData_1ab897397c43749238bb5b120f94558844" kindref="member">in_reply_to</ref>,<sp/>d.<ref refid="structemail_1_1EmailData_1a2e5bee79a2fd21d2f47090eb3c84c08b" kindref="member">from</ref>,<sp/>d.<ref refid="structemail_1_1EmailData_1a10accb9e498602cf7841471741e41fdd" kindref="member">recipients</ref>,<sp/>d.<ref refid="structemail_1_1EmailData_1a04533d7a6670f809da51c335c7449a01" kindref="member">content</ref>),</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ctx);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>EMAIL__EMAIL__INFO_HPP_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/email/email/info.hpp"/>
  </compounddef>
</doxygen>
