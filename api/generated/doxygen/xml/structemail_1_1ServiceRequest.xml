<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structemail_1_1ServiceRequest" kind="struct" language="C++" prot="public">
    <compoundname>email::ServiceRequest</compoundname>
    <includes local="no">service_request.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structemail_1_1ServiceRequest_1a7854c6a65f5a8f8dd6cad195cd826be5" prot="public" static="no" mutable="no">
        <type><ref refid="structemail_1_1ServiceRequestId" kindref="compound">ServiceRequestId</ref></type>
        <definition>ServiceRequestId email::ServiceRequest::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>Request ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_request.hpp" line="46" column="20" bodyfile="include/email/service_request.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structemail_1_1ServiceRequest_1a3272812ec88a2a775c8cb800c169344b" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string email::ServiceRequest::content</definition>
        <argsstring></argsstring>
        <name>content</name>
        <briefdescription>
<para>Content of the request. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_request.hpp" line="48" column="15" bodyfile="include/email/service_request.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structemail_1_1ServiceRequest_1ad530cc6cd2cfb64b90397085fdfbdab4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>email::ServiceRequest::ServiceRequest</definition>
        <argsstring>(const SequenceNumber sequence_number_, const Gid &amp;client_gid_, const std::string &amp;content_)</argsstring>
        <name>ServiceRequest</name>
        <param>
          <type>const <ref refid="namespaceemail_1a0de800b4ba159d6e3892ce756a690103" kindref="member">SequenceNumber</ref></type>
          <declname>sequence_number_</declname>
        </param>
        <param>
          <type>const <ref refid="classemail_1_1Gid" kindref="compound">Gid</ref> &amp;</type>
          <declname>client_gid_</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>content_</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_request.hpp" line="50" column="3" bodyfile="include/email/service_request.hpp" bodystart="50" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structemail_1_1ServiceRequest_1a3c9bc09105fca13fb6e1221a7f43f96b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>email::ServiceRequest::ServiceRequest</definition>
        <argsstring>(const ServiceRequest &amp;)=default</argsstring>
        <name>ServiceRequest</name>
        <param>
          <type>const <ref refid="structemail_1_1ServiceRequest" kindref="compound">ServiceRequest</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/service_request.hpp" line="58" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Service request, with a request ID and some content. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>email::Gid</label>
        <link refid="classemail_1_1Gid"/>
      </node>
      <node id="2">
        <label>email::ServiceRequestId</label>
        <link refid="structemail_1_1ServiceRequestId"/>
        <childnode refid="3" relation="usage">
          <edgelabel>client_gid</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>email::ServiceRequest</label>
        <link refid="structemail_1_1ServiceRequest"/>
        <childnode refid="2" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/email/service_request.hpp" line="43" column="1" bodyfile="include/email/service_request.hpp" bodystart="44" bodyend="59"/>
    <listofallmembers>
      <member refid="structemail_1_1ServiceRequest_1a3272812ec88a2a775c8cb800c169344b" prot="public" virt="non-virtual"><scope>email::ServiceRequest</scope><name>content</name></member>
      <member refid="structemail_1_1ServiceRequest_1a7854c6a65f5a8f8dd6cad195cd826be5" prot="public" virt="non-virtual"><scope>email::ServiceRequest</scope><name>id</name></member>
      <member refid="structemail_1_1ServiceRequest_1ad530cc6cd2cfb64b90397085fdfbdab4" prot="public" virt="non-virtual"><scope>email::ServiceRequest</scope><name>ServiceRequest</name></member>
      <member refid="structemail_1_1ServiceRequest_1a3c9bc09105fca13fb6e1221a7f43f96b" prot="public" virt="non-virtual"><scope>email::ServiceRequest</scope><name>ServiceRequest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
