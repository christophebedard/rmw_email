<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structemail_1_1EmailRecipients" kind="struct" language="C++" prot="public">
    <compoundname>email::EmailRecipients</compoundname>
    <includes local="no">info.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structemail_1_1EmailRecipients_1a0f5c1ef98bc6030b7026b9ff7250e466" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; email::EmailRecipients::to</definition>
        <argsstring></argsstring>
        <name>to</name>
        <briefdescription>
<para>The &quot;to&quot; emails. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/info.hpp" line="59" column="15" bodyfile="include/email/email/info.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structemail_1_1EmailRecipients_1a1abf873bc70b6d1ebb3817d7c2977808" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; email::EmailRecipients::cc</definition>
        <argsstring></argsstring>
        <name>cc</name>
        <briefdescription>
<para>The &quot;cc&quot; emails. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/info.hpp" line="61" column="15" bodyfile="include/email/email/info.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structemail_1_1EmailRecipients_1a9255bf9879cfa1748d17d142b84fb18f" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; email::EmailRecipients::bcc</definition>
        <argsstring></argsstring>
        <name>bcc</name>
        <briefdescription>
<para>The &quot;bcc&quot; emails. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/info.hpp" line="63" column="15" bodyfile="include/email/email/info.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structemail_1_1EmailRecipients_1a879ed18bb87c9a7b45d4cd050eb636e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>email::EmailRecipients::EmailRecipients</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;to_, const std::vector&lt; std::string &gt; &amp;cc_, const std::vector&lt; std::string &gt; &amp;bcc_)</argsstring>
        <name>EmailRecipients</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>to_</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>cc_</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>bcc_</declname>
        </param>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/info.hpp" line="65" column="3" bodyfile="include/email/email/info.hpp" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structemail_1_1EmailRecipients_1a53e2c3f070b41c602df6e2b5bfb7abba" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>email::EmailRecipients::EmailRecipients</definition>
        <argsstring>(const std::string &amp;to_)</argsstring>
        <name>EmailRecipients</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>to_</declname>
        </param>
        <briefdescription>
<para>Constructor with only a single &quot;to&quot; email. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/info.hpp" line="72" column="12" bodyfile="include/email/email/info.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structemail_1_1EmailRecipients_1a12fb7fe3945afc13cd2bd02d9f2cb100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>email::EmailRecipients::EmailRecipients</definition>
        <argsstring>(const EmailRecipients &amp;)=default</argsstring>
        <name>EmailRecipients</name>
        <param>
          <type>const <ref refid="structemail_1_1EmailRecipients" kindref="compound">EmailRecipients</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/info.hpp" line="76" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Recipients of an email. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/email/email/info.hpp" line="56" column="1" bodyfile="include/email/email/info.hpp" bodystart="57" bodyend="78"/>
    <listofallmembers>
      <member refid="structemail_1_1EmailRecipients_1a9255bf9879cfa1748d17d142b84fb18f" prot="public" virt="non-virtual"><scope>email::EmailRecipients</scope><name>bcc</name></member>
      <member refid="structemail_1_1EmailRecipients_1a1abf873bc70b6d1ebb3817d7c2977808" prot="public" virt="non-virtual"><scope>email::EmailRecipients</scope><name>cc</name></member>
      <member refid="structemail_1_1EmailRecipients_1a879ed18bb87c9a7b45d4cd050eb636e0" prot="public" virt="non-virtual"><scope>email::EmailRecipients</scope><name>EmailRecipients</name></member>
      <member refid="structemail_1_1EmailRecipients_1a53e2c3f070b41c602df6e2b5bfb7abba" prot="public" virt="non-virtual"><scope>email::EmailRecipients</scope><name>EmailRecipients</name></member>
      <member refid="structemail_1_1EmailRecipients_1a12fb7fe3945afc13cd2bd02d9f2cb100" prot="public" virt="non-virtual"><scope>email::EmailRecipients</scope><name>EmailRecipients</name></member>
      <member refid="structemail_1_1EmailRecipients_1a0f5c1ef98bc6030b7026b9ff7250e466" prot="public" virt="non-virtual"><scope>email::EmailRecipients</scope><name>to</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
