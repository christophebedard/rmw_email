<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classemail_1_1IntraEmailReceiver" kind="class" language="C++" prot="public">
    <compoundname>email::IntraEmailReceiver</compoundname>
    <basecompoundref refid="classemail_1_1EmailReceiver" prot="public" virt="non-virtual">email::EmailReceiver</basecompoundref>
    <includes local="no">intra_receiver.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classemail_1_1IntraEmailReceiver_1a5213b6ca39a6145ae2f1b8f9cb6c4ea4" prot="private" static="no" mutable="no">
        <type><ref refid="classemail_1_1SafeQueue" kindref="compound">SafeQueue</ref>&lt; struct <ref refid="structemail_1_1EmailData" kindref="compound">EmailData</ref> &gt;</type>
        <definition>SafeQueue&lt;struct EmailData&gt; email::IntraEmailReceiver::emails_</definition>
        <argsstring></argsstring>
        <name>emails_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_receiver.hpp" line="63" column="13" bodyfile="include/email/email/intra_receiver.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classemail_1_1IntraEmailReceiver_1a931d5a8452bb052bc60d04cb8ff7f674" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>email::IntraEmailReceiver::IntraEmailReceiver</definition>
        <argsstring>()</argsstring>
        <name>IntraEmailReceiver</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_receiver.hpp" line="40" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1IntraEmailReceiver_1a565e517a247aeaadceb180163d29cee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual email::IntraEmailReceiver::~IntraEmailReceiver</definition>
        <argsstring>()</argsstring>
        <name>~IntraEmailReceiver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_receiver.hpp" line="43" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1IntraEmailReceiver_1a2046c9a7ce1774fa43c0a5dc9cea340a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::optional&lt; struct <ref refid="structemail_1_1EmailData" kindref="compound">EmailData</ref> &gt;</type>
        <definition>virtual std::optional&lt;struct EmailData&gt; email::IntraEmailReceiver::get_email</definition>
        <argsstring>(std::optional&lt; std::chrono::nanoseconds &gt; polling_period=std::nullopt)</argsstring>
        <name>get_email</name>
        <reimplements refid="classemail_1_1EmailReceiver_1a39b6a8bb1b4ca5da66b76a5a317d6e6b">get_email</reimplements>
        <param>
          <type>std::optional&lt; std::chrono::nanoseconds &gt;</type>
          <declname>polling_period</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Get a new email. </para>
        </briefdescription>
        <detaileddescription>
<para>This function fetches a new email through polling.</para>
<para>The caller can specify a polling period, which will be used as a target polling rate. This means that, if the internal polling call takes more time than the polling period, the next call will be executed right away.</para>
<para>If the polling period value is equal to 0, the sleep call will be skipped, and polling will be done as fast as possible. This is the default value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polling_period</parametername>
</parameternamelist>
<parameterdescription>
<para>the polling period </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new email, or <computeroutput>std::nullopt</computeroutput> if it failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_receiver.hpp" line="48" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1IntraEmailReceiver_1a804e589d1c329ed4862d01d02a3d74b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void email::IntraEmailReceiver::receive</definition>
        <argsstring>(const struct EmailData &amp;data)</argsstring>
        <name>receive</name>
        <param>
          <type>const struct <ref refid="structemail_1_1EmailData" kindref="compound">EmailData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Receive new email. </para>
        </briefdescription>
        <detaileddescription>
<para>This function will take care of generating a unique message ID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the new email data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/intra_receiver.hpp" line="58" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Intraprocess email receiver. </para>
    </briefdescription>
    <detaileddescription>
<para>Receives email objects from the intraprocess email sender. Uses a simple queue to act as a buffer in between. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>email::EmailReceiver</label>
        <link refid="classemail_1_1EmailReceiver"/>
      </node>
      <node id="1">
        <label>email::IntraEmailReceiver</label>
        <link refid="classemail_1_1IntraEmailReceiver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>email::EmailReceiver</label>
        <link refid="classemail_1_1EmailReceiver"/>
      </node>
      <node id="1">
        <label>email::IntraEmailReceiver</label>
        <link refid="classemail_1_1IntraEmailReceiver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/email/email/intra_receiver.hpp" line="35" column="1" bodyfile="include/email/email/intra_receiver.hpp" bodystart="36" bodyend="64"/>
    <listofallmembers>
      <member refid="classemail_1_1EmailReceiver_1aaea4bf463066dac619bdfad0849f9d40" prot="protected" virt="non-virtual"><scope>email::IntraEmailReceiver</scope><name>do_shutdown_</name></member>
      <member refid="classemail_1_1EmailReceiver_1a72726a74b1cd15878e09b792946db159" prot="public" virt="non-virtual"><scope>email::IntraEmailReceiver</scope><name>EmailReceiver</name></member>
      <member refid="classemail_1_1IntraEmailReceiver_1a5213b6ca39a6145ae2f1b8f9cb6c4ea4" prot="private" virt="non-virtual"><scope>email::IntraEmailReceiver</scope><name>emails_</name></member>
      <member refid="classemail_1_1IntraEmailReceiver_1a2046c9a7ce1774fa43c0a5dc9cea340a" prot="public" virt="virtual"><scope>email::IntraEmailReceiver</scope><name>get_email</name></member>
      <member refid="classemail_1_1IntraEmailReceiver_1a931d5a8452bb052bc60d04cb8ff7f674" prot="public" virt="non-virtual"><scope>email::IntraEmailReceiver</scope><name>IntraEmailReceiver</name></member>
      <member refid="classemail_1_1EmailReceiver_1a5bdc7fcdd8d02a1070b8d45d80caf0c3" prot="protected" virt="non-virtual"><scope>email::IntraEmailReceiver</scope><name>logger_</name></member>
      <member refid="classemail_1_1IntraEmailReceiver_1a804e589d1c329ed4862d01d02a3d74b0" prot="public" virt="non-virtual"><scope>email::IntraEmailReceiver</scope><name>receive</name></member>
      <member refid="classemail_1_1EmailReceiver_1acc9eaabaf2588628089e3a9ddffb7de4" prot="public" virt="non-virtual"><scope>email::IntraEmailReceiver</scope><name>shutdown</name></member>
      <member refid="classemail_1_1EmailReceiver_1a8d5b33a13fa468c0ce8843ffacf950cf" prot="public" virt="virtual"><scope>email::IntraEmailReceiver</scope><name>~EmailReceiver</name></member>
      <member refid="classemail_1_1IntraEmailReceiver_1a565e517a247aeaadceb180163d29cee1" prot="public" virt="virtual"><scope>email::IntraEmailReceiver</scope><name>~IntraEmailReceiver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
