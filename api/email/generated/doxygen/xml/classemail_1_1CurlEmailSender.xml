<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classemail_1_1CurlEmailSender" kind="class" language="C++" prot="public">
    <compoundname>email::CurlEmailSender</compoundname>
    <basecompoundref refid="classemail_1_1EmailSender" prot="public" virt="non-virtual">email::EmailSender</basecompoundref>
    <basecompoundref refid="classemail_1_1CurlExecutor" prot="public" virt="non-virtual">email::CurlExecutor</basecompoundref>
    <includes local="no">curl_sender.hpp</includes>
    <innerclass refid="structemail_1_1CurlEmailSender_1_1UploadData" prot="private">email::CurlEmailSender::UploadData</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classemail_1_1CurlEmailSender_1ac4da6b896f06b082ac848effa2df3c28" prot="private" static="no" mutable="no">
        <type>EmailRecipients::SharedPtrConst</type>
        <definition>EmailRecipients::SharedPtrConst email::CurlEmailSender::recipients_</definition>
        <argsstring></argsstring>
        <name>recipients_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/curl_sender.hpp" line="96" column="35" bodyfile="include/email/email/curl_sender.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemail_1_1CurlEmailSender_1a9fbc3c4e7c631d17d60ed8e3978bc59f" prot="private" static="no" mutable="no">
        <type>struct curl_slist *</type>
        <definition>struct curl_slist* email::CurlEmailSender::recipients_list_</definition>
        <argsstring></argsstring>
        <name>recipients_list_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/curl_sender.hpp" line="97" column="20" bodyfile="include/email/email/curl_sender.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemail_1_1CurlEmailSender_1a5267e1e0acb9877e6e11f67bb7d3efb3" prot="private" static="no" mutable="no">
        <type>struct UploadData</type>
        <definition>struct UploadData email::CurlEmailSender::upload_ctx_</definition>
        <argsstring></argsstring>
        <name>upload_ctx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/curl_sender.hpp" line="97" column="20" bodyfile="include/email/email/curl_sender.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classemail_1_1CurlEmailSender_1a3be4b4a980e15114735e55ecfbee0d74" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>email::CurlEmailSender::CurlEmailSender</definition>
        <argsstring>(UserInfo::SharedPtrConst user_info, EmailRecipients::SharedPtrConst recipients, const bool curl_verbose)</argsstring>
        <name>CurlEmailSender</name>
        <param>
          <type>UserInfo::SharedPtrConst</type>
          <declname>user_info</declname>
        </param>
        <param>
          <type>EmailRecipients::SharedPtrConst</type>
          <declname>recipients</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>curl_verbose</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user_info</parametername>
</parameternamelist>
<parameterdescription>
<para>the user information for sending emails </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recipients</parametername>
</parameternamelist>
<parameterdescription>
<para>the email recipients </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>curl_verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>the curl verbose status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/curl_sender.hpp" line="45" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1CurlEmailSender_1ab42fc6136b2c5b1dc83c346e221df588" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual email::CurlEmailSender::~CurlEmailSender</definition>
        <argsstring>()</argsstring>
        <name>~CurlEmailSender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/curl_sender.hpp" line="51" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1CurlEmailSender_1a8aacb118cf3750a293f1b48e8c035252" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool email::CurlEmailSender::send</definition>
        <argsstring>(const struct EmailContent &amp;content, std::optional&lt; EmailHeaders &gt; additional_headers=std::nullopt)</argsstring>
        <name>send</name>
        <reimplements refid="classemail_1_1EmailSender_1a12487f6d865d3839438cfb0814bbf1ec">send</reimplements>
        <param>
          <type>const struct <ref refid="structemail_1_1EmailContent" kindref="compound">EmailContent</ref> &amp;</type>
          <declname>content</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="namespaceemail_1ae41e6fb7cb5a3b87ee3effdc2aa2065f" kindref="member">EmailHeaders</ref> &gt;</type>
          <declname>additional_headers</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Send an email. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>the content </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>additional_headers</parametername>
</parameternamelist>
<parameterdescription>
<para>the optional additional headers to include in the email </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/curl_sender.hpp" line="56" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1CurlEmailSender_1a1abbf80344254931d8107ef757a2a13a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool email::CurlEmailSender::reply</definition>
        <argsstring>(const struct EmailContent &amp;content, const struct EmailData &amp;email, std::optional&lt; EmailHeaders &gt; additional_headers=std::nullopt)</argsstring>
        <name>reply</name>
        <reimplements refid="classemail_1_1EmailSender_1ad7b5de33bdb15b17f88cfccde80aa881">reply</reimplements>
        <param>
          <type>const struct <ref refid="structemail_1_1EmailContent" kindref="compound">EmailContent</ref> &amp;</type>
          <declname>content</declname>
        </param>
        <param>
          <type>const struct <ref refid="structemail_1_1EmailData" kindref="compound">EmailData</ref> &amp;</type>
          <declname>email</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="namespaceemail_1ae41e6fb7cb5a3b87ee3effdc2aa2065f" kindref="member">EmailHeaders</ref> &gt;</type>
          <declname>additional_headers</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Reply to an email. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>the content </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>email</parametername>
</parameternamelist>
<parameterdescription>
<para>the email to reply to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>additional_headers</parametername>
</parameternamelist>
<parameterdescription>
<para>the optional additional headers to include in the email </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/curl_sender.hpp" line="63" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classemail_1_1CurlEmailSender_1a2d3d8d8ad4f4f94e2ac3aaabab3b86c1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool email::CurlEmailSender::init_options</definition>
        <argsstring>()</argsstring>
        <name>init_options</name>
        <reimplements refid="classemail_1_1CurlExecutor_1adbb7b4a2ce5bb123945c8f7aecc40a08">init_options</reimplements>
        <briefdescription>
<para>Initialize concrete options. </para>
        </briefdescription>
        <detaileddescription>
<para>Inheriting classes should implement this and initialize options specific to them.</para>
<para><simplesect kind="return"><para>true if success, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/curl_sender.hpp" line="71" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classemail_1_1CurlEmailSender_1af3c7dd5f8aab6be7abeb32489b6131e7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool email::CurlEmailSender::send_payload</definition>
        <argsstring>(const std::string &amp;payload)</argsstring>
        <name>send_payload</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
<para>Send payload. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>the payload </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/curl_sender.hpp" line="82" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classemail_1_1CurlEmailSender_1a8b8e43116e488e62fdab655e964bc427" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t email::CurlEmailSender::read_payload_callback</definition>
        <argsstring>(void *ptr, size_t size, size_t nmemb, void *userp)</argsstring>
        <name>read_payload_callback</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nmemb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userp</declname>
        </param>
        <briefdescription>
<para>Read callback for curl upload. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/curl_sender.hpp" line="87" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Email sending wrapper for curl. </para>
    </briefdescription>
    <detaileddescription>
<para>Sets the options and executes commands to send emails with curl. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>email::CurlEmailSender</label>
        <link refid="classemail_1_1CurlEmailSender"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>email::EmailSender</label>
        <link refid="classemail_1_1EmailSender"/>
      </node>
      <node id="3">
        <label>email::CurlExecutor</label>
        <link refid="classemail_1_1CurlExecutor"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>email::CurlEmailSender</label>
        <link refid="classemail_1_1CurlEmailSender"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>email::EmailSender</label>
        <link refid="classemail_1_1EmailSender"/>
      </node>
      <node id="4">
        <label>email::CurlContext</label>
        <link refid="classemail_1_1CurlContext"/>
      </node>
      <node id="3">
        <label>email::CurlExecutor</label>
        <link refid="classemail_1_1CurlExecutor"/>
        <childnode refid="4" relation="usage">
          <edgelabel>context_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/email/email/curl_sender.hpp" line="35" column="1" bodyfile="include/email/email/curl_sender.hpp" bodystart="36" bodyend="99"/>
    <listofallmembers>
      <member refid="classemail_1_1CurlExecutor_1a676e59d46679416f46930f314f760b0d" prot="protected" virt="non-virtual"><scope>email::CurlEmailSender</scope><name>context_</name></member>
      <member refid="classemail_1_1CurlEmailSender_1a3be4b4a980e15114735e55ecfbee0d74" prot="public" virt="non-virtual"><scope>email::CurlEmailSender</scope><name>CurlEmailSender</name></member>
      <member refid="classemail_1_1CurlExecutor_1a1e0617765bd8951450ad9aa9f6ae2174" prot="protected" virt="non-virtual"><scope>email::CurlEmailSender</scope><name>CurlExecutor</name></member>
      <member refid="classemail_1_1EmailSender_1a6a067e65d5a0c78bd30217eaab577420" prot="public" virt="non-virtual"><scope>email::CurlEmailSender</scope><name>EmailSender</name></member>
      <member refid="classemail_1_1CurlExecutor_1aa00b5d609f9ebeead4f82afaf5f0e3f1" prot="public" virt="non-virtual"><scope>email::CurlEmailSender</scope><name>init</name></member>
      <member refid="classemail_1_1CurlEmailSender_1a2d3d8d8ad4f4f94e2ac3aaabab3b86c1" prot="protected" virt="virtual"><scope>email::CurlEmailSender</scope><name>init_options</name></member>
      <member refid="classemail_1_1CurlExecutor_1ab0752abd31f6fff2cba1ca0de2e10a3c" prot="public" virt="non-virtual"><scope>email::CurlEmailSender</scope><name>is_valid</name></member>
      <member refid="classemail_1_1EmailSender_1af10fd3a823d5f5355f6cd3a784a7d3d8" prot="protected" virt="non-virtual"><scope>email::CurlEmailSender</scope><name>logger</name></member>
      <member refid="classemail_1_1CurlEmailSender_1a8b8e43116e488e62fdab655e964bc427" prot="private" virt="non-virtual"><scope>email::CurlEmailSender</scope><name>read_payload_callback</name></member>
      <member refid="classemail_1_1CurlEmailSender_1ac4da6b896f06b082ac848effa2df3c28" prot="private" virt="non-virtual"><scope>email::CurlEmailSender</scope><name>recipients_</name></member>
      <member refid="classemail_1_1CurlEmailSender_1a9fbc3c4e7c631d17d60ed8e3978bc59f" prot="private" virt="non-virtual"><scope>email::CurlEmailSender</scope><name>recipients_list_</name></member>
      <member refid="classemail_1_1CurlEmailSender_1a1abbf80344254931d8107ef757a2a13a" prot="public" virt="virtual"><scope>email::CurlEmailSender</scope><name>reply</name></member>
      <member refid="classemail_1_1CurlEmailSender_1a8aacb118cf3750a293f1b48e8c035252" prot="public" virt="virtual"><scope>email::CurlEmailSender</scope><name>send</name></member>
      <member refid="classemail_1_1CurlEmailSender_1af3c7dd5f8aab6be7abeb32489b6131e7" prot="private" virt="non-virtual"><scope>email::CurlEmailSender</scope><name>send_payload</name></member>
      <member refid="classemail_1_1CurlEmailSender_1a5267e1e0acb9877e6e11f67bb7d3efb3" prot="private" virt="non-virtual"><scope>email::CurlEmailSender</scope><name>upload_ctx_</name></member>
      <member refid="classemail_1_1CurlEmailSender_1ab42fc6136b2c5b1dc83c346e221df588" prot="public" virt="virtual"><scope>email::CurlEmailSender</scope><name>~CurlEmailSender</name></member>
      <member refid="classemail_1_1CurlExecutor_1a6052227ea05131b3dd23ac5c929caaa8" prot="protected" virt="virtual"><scope>email::CurlEmailSender</scope><name>~CurlExecutor</name></member>
      <member refid="classemail_1_1EmailSender_1a84b1193de252540aca30a78973f30ff9" prot="public" virt="virtual"><scope>email::CurlEmailSender</scope><name>~EmailSender</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
