<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classemail_1_1Publisher" kind="class" language="C++" prot="public">
    <compoundname>email::Publisher</compoundname>
    <basecompoundref refid="classemail_1_1PubSubObject" prot="public" virt="non-virtual">email::PubSubObject</basecompoundref>
    <includes local="no">publisher.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classemail_1_1Publisher_1a101adc71cdd9cf36fa94507440490b62" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="namespaceemail_1a8d76c558a86ae3983f1b8f138c036e61" kindref="member">Logger</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Logger&gt; email::Publisher::logger_</definition>
        <argsstring></argsstring>
        <name>logger_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/publisher.hpp" line="66" column="19" bodyfile="include/email/publisher.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemail_1_1Publisher_1aea353787a7c1e635022373ad03595b83" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classemail_1_1EmailSender" kindref="compound">EmailSender</ref> &gt;</type>
        <definition>std::shared_ptr&lt;EmailSender&gt; email::Publisher::sender_</definition>
        <argsstring></argsstring>
        <name>sender_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/publisher.hpp" line="67" column="19" bodyfile="include/email/publisher.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classemail_1_1Publisher_1a38811fe95dd19f2f704e589b34251682" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>email::Publisher::Publisher</definition>
        <argsstring>(const std::string &amp;topic_name)</argsstring>
        <name>Publisher</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>topic_name</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>topic_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the topic name to publish on </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/publisher.hpp" line="45" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1Publisher_1acaafeeb59a87dde27dc82c57090781ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual email::Publisher::~Publisher</definition>
        <argsstring>()</argsstring>
        <name>~Publisher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/publisher.hpp" line="48" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1Publisher_1a54c103a25f64211d2e57ef9799dd4687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void email::Publisher::publish</definition>
        <argsstring>(const std::string &amp;message, std::optional&lt; EmailHeaders &gt; additional_headers=std::nullopt, std::optional&lt; Timestamp &gt; timestamp=std::nullopt)</argsstring>
        <name>publish</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="namespaceemail_1ae41e6fb7cb5a3b87ee3effdc2aa2065f" kindref="member">EmailHeaders</ref> &gt;</type>
          <declname>additional_headers</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classemail_1_1Timestamp" kindref="compound">Timestamp</ref> &gt;</type>
          <declname>timestamp</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Publish message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>additional_headers</parametername>
</parameternamelist>
<parameterdescription>
<para>the additional headers to include </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>the timestamp to associate to this publication </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/publisher.hpp" line="58" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Message publisher. </para>
    </briefdescription>
    <detaileddescription>
<para>Uses emails, with the topic as the email subject and the data as the email body. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>email::GidObject</label>
        <link refid="classemail_1_1GidObject"/>
      </node>
      <node id="1">
        <label>email::Publisher</label>
        <link refid="classemail_1_1Publisher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>email::PubSubObject</label>
        <link refid="classemail_1_1PubSubObject"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>email::NamedObject</label>
        <link refid="classemail_1_1NamedObject"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>email::GidObject</label>
        <link refid="classemail_1_1GidObject"/>
      </node>
      <node id="1">
        <label>email::Publisher</label>
        <link refid="classemail_1_1Publisher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>email::PubSubObject</label>
        <link refid="classemail_1_1PubSubObject"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>email::NamedObject</label>
        <link refid="classemail_1_1NamedObject"/>
      </node>
    </collaborationgraph>
    <location file="include/email/publisher.hpp" line="37" column="1" bodyfile="include/email/publisher.hpp" bodystart="38" bodyend="68"/>
    <listofallmembers>
      <member refid="classemail_1_1GidObject_1a8606636aba92bce5b2c81ae0e0289d8e" prot="public" virt="non-virtual"><scope>email::Publisher</scope><name>get_gid</name></member>
      <member refid="classemail_1_1NamedObject_1a73cb596f0cb6c525566738fea946ae3a" prot="protected" virt="non-virtual"><scope>email::Publisher</scope><name>get_object_name</name></member>
      <member refid="classemail_1_1PubSubObject_1a00a22d18eebc82496581344c21e02c32" prot="public" virt="non-virtual"><scope>email::Publisher</scope><name>get_topic_name</name></member>
      <member refid="classemail_1_1GidObject_1a29ebb428c2827e00fe71660de6721c5e" prot="protected" virt="non-virtual"><scope>email::Publisher</scope><name>GidObject</name></member>
      <member refid="classemail_1_1NamedObject_1a41b4dd034b6ebdbf1bbde94d595d30fa" prot="protected" virt="non-virtual"><scope>email::Publisher</scope><name>has_newline</name></member>
      <member refid="classemail_1_1Publisher_1a101adc71cdd9cf36fa94507440490b62" prot="private" virt="non-virtual"><scope>email::Publisher</scope><name>logger_</name></member>
      <member refid="classemail_1_1NamedObject_1a0f9a29567389176f23b61b8d0d71e774" prot="protected" virt="non-virtual"><scope>email::Publisher</scope><name>NamedObject</name></member>
      <member refid="classemail_1_1Publisher_1a54c103a25f64211d2e57ef9799dd4687" prot="public" virt="non-virtual"><scope>email::Publisher</scope><name>publish</name></member>
      <member refid="classemail_1_1Publisher_1a38811fe95dd19f2f704e589b34251682" prot="public" virt="non-virtual"><scope>email::Publisher</scope><name>Publisher</name></member>
      <member refid="classemail_1_1PubSubObject_1a601bed08338a20e2d63e2332661a61e5" prot="protected" virt="non-virtual"><scope>email::Publisher</scope><name>PubSubObject</name></member>
      <member refid="classemail_1_1Publisher_1aea353787a7c1e635022373ad03595b83" prot="private" virt="non-virtual"><scope>email::Publisher</scope><name>sender_</name></member>
      <member refid="classemail_1_1GidObject_1a8fce88afdc622182418d32b1c43cc17b" prot="protected" virt="virtual"><scope>email::Publisher</scope><name>~GidObject</name></member>
      <member refid="classemail_1_1NamedObject_1ab6de668d7cc2c1eefda15c5822599a46" prot="protected" virt="virtual"><scope>email::Publisher</scope><name>~NamedObject</name></member>
      <member refid="classemail_1_1Publisher_1acaafeeb59a87dde27dc82c57090781ba" prot="public" virt="virtual"><scope>email::Publisher</scope><name>~Publisher</name></member>
      <member refid="classemail_1_1PubSubObject_1a30f73a71f66b22671b2be92884e6c81f" prot="protected" virt="virtual"><scope>email::Publisher</scope><name>~PubSubObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
