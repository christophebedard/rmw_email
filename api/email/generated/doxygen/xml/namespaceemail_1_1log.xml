<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceemail_1_1log" kind="namespace" language="C++">
    <compoundname>email::log</compoundname>
    <innerclass refid="classemail_1_1log_1_1LoggingError" prot="public">email::log::LoggingError</innerclass>
    <innerclass refid="classemail_1_1log_1_1LoggingNotInitializedError" prot="public">email::log::LoggingNotInitializedError</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceemail_1_1log_1a76b9f7af528d9d5b684c7dd13770eb8f" prot="public" static="no" strong="no">
        <type></type>
        <name>Level</name>
        <enumvalue id="namespaceemail_1_1log_1a76b9f7af528d9d5b684c7dd13770eb8fab854c88759c3923a679b84586ca1197c" prot="public">
          <name>debug</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceemail_1_1log_1a76b9f7af528d9d5b684c7dd13770eb8faa7c9183950be07c0f6e85a5b10a45087" prot="public">
          <name>info</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceemail_1_1log_1a76b9f7af528d9d5b684c7dd13770eb8fa3e9bbe69f71687a336604c2482f4366c" prot="public">
          <name>warn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceemail_1_1log_1a76b9f7af528d9d5b684c7dd13770eb8faba726552e49985a6cc8f897f16e99793" prot="public">
          <name>error</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceemail_1_1log_1a76b9f7af528d9d5b684c7dd13770eb8fa6df5a6c39d2a59dd7477e58e07c0bffa" prot="public">
          <name>fatal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceemail_1_1log_1a76b9f7af528d9d5b684c7dd13770eb8fa0d42315cc89e99a312b0445743128878" prot="public">
          <name>off</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Logging level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/log.hpp" line="57" column="1" bodyfile="include/email/log.hpp" bodystart="58" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceemail_1_1log_1a70e2c4b9640f8b10a086f14269d4681d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void email::log::init</definition>
        <argsstring>(const Level &amp;level)</argsstring>
        <name>init</name>
        <param>
          <type>const <ref refid="namespaceemail_1_1log_1a76b9f7af528d9d5b684c7dd13770eb8f" kindref="member">Level</ref> &amp;</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Initialize logging. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>the console logging level </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>LoggingAlreadyInitializedError</parametername>
</parameternamelist>
<parameterdescription>
<para>if logging is already intialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/log.hpp" line="73" column="1" declfile="include/email/log.hpp" declline="73" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceemail_1_1log_1aba50b69230431fca149b16fe3fbcaa9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void email::log::init_from_env</definition>
        <argsstring>()</argsstring>
        <name>init_from_env</name>
        <briefdescription>
<para>Initialize logging using environment variable value for the logging level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>LoggingAlreadyInitializedError</parametername>
</parameternamelist>
<parameterdescription>
<para>if logging is already intialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/log.hpp" line="80" column="1" declfile="include/email/log.hpp" declline="80" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceemail_1_1log_1a82cb3ebe95d6b4e4bc16fd417bf65b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="namespaceemail_1a8d76c558a86ae3983f1b8f138c036e61" kindref="member">Logger</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Logger&gt; email::log::create</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>create</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create logger from the root logger. </para>
        </briefdescription>
        <detaileddescription>
<para>Uses sink(s) and log level from the root logger.</para>
<para>Will initialize logging from environment if not initialized.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the logger </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the logger </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/log.hpp" line="92" column="1" declfile="include/email/log.hpp" declline="92" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceemail_1_1log_1ab5f6effef314d9faef6dee3b4d78f4ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="namespaceemail_1a8d76c558a86ae3983f1b8f138c036e61" kindref="member">Logger</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Logger&gt; email::log::get_or_create</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>get_or_create</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get an existing logger or create it from the root logger. </para>
        </briefdescription>
        <detaileddescription>
<para>Useful for sharing a logger.</para>
<para>Will initialize logging from environment if not initialized.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the logger </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the logger </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/log.hpp" line="104" column="1" declfile="include/email/log.hpp" declline="104" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceemail_1_1log_1aae637767284f0246349f0c09c4a7b30f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void email::log::remove</definition>
        <argsstring>(const std::shared_ptr&lt; Logger &gt; &amp;logger)</argsstring>
        <name>remove</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="namespaceemail_1a8d76c558a86ae3983f1b8f138c036e61" kindref="member">Logger</ref> &gt; &amp;</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
<para>Remove an existing logger. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>logger</parametername>
</parameternamelist>
<parameterdescription>
<para>the logger </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classemail_1_1log_1_1LoggingNotInitializedError" kindref="compound">LoggingNotInitializedError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if logging is not intialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/log.hpp" line="112" column="1" declfile="include/email/log.hpp" declline="112" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceemail_1_1log_1ab7f5f3d63616c0073e304d2b20f86841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void email::log::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <briefdescription>
<para>Shutdown and finalize. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/log.hpp" line="116" column="1" declfile="include/email/log.hpp" declline="116" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/email/log.hpp" line="35" column="1"/>
  </compounddef>
</doxygen>
