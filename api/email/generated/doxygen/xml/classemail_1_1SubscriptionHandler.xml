<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classemail_1_1SubscriptionHandler" kind="class" language="C++" prot="public">
    <compoundname>email::SubscriptionHandler</compoundname>
    <basecompoundref refid="classemail_1_1EmailHandler" prot="public" virt="non-virtual">email::EmailHandler</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; SubscriptionHandler &gt;</basecompoundref>
    <includes local="no">subscription_handler.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classemail_1_1SubscriptionHandler_1a074215e7cbbd40683d3760a914b0d265" prot="public" static="no">
        <type><ref refid="classemail_1_1SafeQueue" kindref="compound">SafeQueue</ref>&lt; std::pair&lt; std::string, <ref refid="classemail_1_1MessageInfo" kindref="compound">MessageInfo</ref> &gt; &gt;</type>
        <definition>using email::SubscriptionHandler::MessageQueue =  SafeQueue&lt;std::pair&lt;std::string, MessageInfo&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>MessageQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/subscription_handler.hpp" line="45" column="3" bodyfile="include/email/subscription_handler.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classemail_1_1SubscriptionHandler_1ace86640f404d16de569d29e7f24b004a" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="namespaceemail_1a8d76c558a86ae3983f1b8f138c036e61" kindref="member">Logger</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Logger&gt; email::SubscriptionHandler::logger_</definition>
        <argsstring></argsstring>
        <name>logger_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/subscription_handler.hpp" line="79" column="19" bodyfile="include/email/subscription_handler.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemail_1_1SubscriptionHandler_1af5f200db810d451dba923ccd29ea92a8" prot="private" static="no" mutable="yes">
        <type>std::mutex</type>
        <definition>std::mutex email::SubscriptionHandler::subscriptions_mutex_</definition>
        <argsstring></argsstring>
        <name>subscriptions_mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/subscription_handler.hpp" line="80" column="22" bodyfile="include/email/subscription_handler.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemail_1_1SubscriptionHandler_1ac3a88b8ea080b3de5f6ff1c1a2580141" prot="private" static="no" mutable="no">
        <type>std::unordered_multimap&lt; std::string, MessageQueue::WeakPtr &gt;</type>
        <definition>std::unordered_multimap&lt;std::string, MessageQueue::WeakPtr&gt; email::SubscriptionHandler::subscriptions_</definition>
        <argsstring></argsstring>
        <name>subscriptions_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/subscription_handler.hpp" line="81" column="27" bodyfile="include/email/subscription_handler.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classemail_1_1SubscriptionHandler_1a4f580d0f7505ff64e14b7e74ee38861c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>email::SubscriptionHandler::SubscriptionHandler</definition>
        <argsstring>()</argsstring>
        <name>SubscriptionHandler</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/subscription_handler.hpp" line="48" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1SubscriptionHandler_1af5da1131267e3764c91e22b9c8c4d786" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual email::SubscriptionHandler::~SubscriptionHandler</definition>
        <argsstring>()</argsstring>
        <name>~SubscriptionHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/subscription_handler.hpp" line="50" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1SubscriptionHandler_1a4b2d9f6a6346020e67447c2117300434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void email::SubscriptionHandler::register_subscription</definition>
        <argsstring>(const std::string &amp;topic_name, MessageQueue::WeakPtr message_queue)</argsstring>
        <name>register_subscription</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>topic_name</declname>
        </param>
        <param>
          <type>MessageQueue::WeakPtr</type>
          <declname>message_queue</declname>
        </param>
        <briefdescription>
<para>Register a subscription with the handler. </para>
        </briefdescription>
        <detaileddescription>
<para>New messages will be added to the subscription&apos;s queue if the topic name matches.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>topic_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the topic name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_queue</parametername>
</parameternamelist>
<parameterdescription>
<para>the subscription&apos;s message queue to push the new message to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/subscription_handler.hpp" line="60" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1SubscriptionHandler_1aa57488fcda9056d279f87d474306525a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void email::SubscriptionHandler::register_handler</definition>
        <argsstring>(std::shared_ptr&lt; PollingManager &gt; polling_manager)</argsstring>
        <name>register_handler</name>
        <reimplements refid="classemail_1_1EmailHandler_1a4760f8a9513bc50c2d453644da51ab1e">register_handler</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classemail_1_1PollingManager" kindref="compound">PollingManager</ref> &gt;</type>
          <declname>polling_manager</declname>
        </param>
        <briefdescription>
<para>Register this handler. </para>
        </briefdescription>
        <detaileddescription>
<para>Registers this handler with the <computeroutput><ref refid="classemail_1_1PollingManager" kindref="compound">PollingManager</ref></computeroutput> so that it is called with new emails. To be called after creation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polling_manager</parametername>
</parameternamelist>
<parameterdescription>
<para>the polling manager to register with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/subscription_handler.hpp" line="66" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1SubscriptionHandler_1a59ca1ab4299475b961cdbb7baf252da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void email::SubscriptionHandler::handle</definition>
        <argsstring>(const struct EmailData &amp;data)</argsstring>
        <name>handle</name>
        <reimplements refid="classemail_1_1EmailHandler_1a4f58d53157b09b2b8e70a77538f2b37f">handle</reimplements>
        <param>
          <type>const struct <ref refid="structemail_1_1EmailData" kindref="compound">EmailData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Handle new email. </para>
        </briefdescription>
        <detaileddescription>
<para>Adds the message to the queues of subscriptions with topic names that match the new message. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/subscription_handler.hpp" line="74" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Email handler for subscriptions. </para>
    </briefdescription>
    <detaileddescription>
<para>Distributes new messages to the right subscription(s). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>email::EmailHandler</label>
        <link refid="classemail_1_1EmailHandler"/>
      </node>
      <node id="3">
        <label>std::enable_shared_from_this&lt; SubscriptionHandler &gt;</label>
      </node>
      <node id="1">
        <label>email::SubscriptionHandler</label>
        <link refid="classemail_1_1SubscriptionHandler"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>email::EmailHandler</label>
        <link refid="classemail_1_1EmailHandler"/>
      </node>
      <node id="3">
        <label>std::enable_shared_from_this&lt; SubscriptionHandler &gt;</label>
      </node>
      <node id="1">
        <label>email::SubscriptionHandler</label>
        <link refid="classemail_1_1SubscriptionHandler"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/email/subscription_handler.hpp" line="41" column="1" bodyfile="include/email/subscription_handler.hpp" bodystart="43" bodyend="82"/>
    <listofallmembers>
      <member refid="classemail_1_1EmailHandler_1ae11713a20d4aa3bf7a9913e8853f3c24" prot="protected" virt="non-virtual"><scope>email::SubscriptionHandler</scope><name>EmailHandler</name></member>
      <member refid="classemail_1_1SubscriptionHandler_1a59ca1ab4299475b961cdbb7baf252da8" prot="public" virt="virtual"><scope>email::SubscriptionHandler</scope><name>handle</name></member>
      <member refid="classemail_1_1SubscriptionHandler_1ace86640f404d16de569d29e7f24b004a" prot="private" virt="non-virtual"><scope>email::SubscriptionHandler</scope><name>logger_</name></member>
      <member refid="classemail_1_1SubscriptionHandler_1a074215e7cbbd40683d3760a914b0d265" prot="public" virt="non-virtual"><scope>email::SubscriptionHandler</scope><name>MessageQueue</name></member>
      <member refid="classemail_1_1SubscriptionHandler_1aa57488fcda9056d279f87d474306525a" prot="public" virt="virtual"><scope>email::SubscriptionHandler</scope><name>register_handler</name></member>
      <member refid="classemail_1_1SubscriptionHandler_1a4b2d9f6a6346020e67447c2117300434" prot="public" virt="non-virtual"><scope>email::SubscriptionHandler</scope><name>register_subscription</name></member>
      <member refid="classemail_1_1EmailHandler_1a3a2341fe5a385c0948851ffc602b68ff" prot="protected" virt="non-virtual"><scope>email::SubscriptionHandler</scope><name>registered_</name></member>
      <member refid="classemail_1_1SubscriptionHandler_1a4f580d0f7505ff64e14b7e74ee38861c" prot="public" virt="non-virtual"><scope>email::SubscriptionHandler</scope><name>SubscriptionHandler</name></member>
      <member refid="classemail_1_1SubscriptionHandler_1ac3a88b8ea080b3de5f6ff1c1a2580141" prot="private" virt="non-virtual"><scope>email::SubscriptionHandler</scope><name>subscriptions_</name></member>
      <member refid="classemail_1_1SubscriptionHandler_1af5f200db810d451dba923ccd29ea92a8" prot="private" virt="non-virtual"><scope>email::SubscriptionHandler</scope><name>subscriptions_mutex_</name></member>
      <member refid="classemail_1_1EmailHandler_1ad2fa34d6911cb7e54a99be33e449373f" prot="protected" virt="virtual"><scope>email::SubscriptionHandler</scope><name>~EmailHandler</name></member>
      <member refid="classemail_1_1SubscriptionHandler_1af5da1131267e3764c91e22b9c8c4d786" prot="public" virt="virtual"><scope>email::SubscriptionHandler</scope><name>~SubscriptionHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
