<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classemail_1_1EmailReceiver" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>email::EmailReceiver</compoundname>
    <derivedcompoundref refid="classemail_1_1CurlEmailReceiver" prot="public" virt="non-virtual">email::CurlEmailReceiver</derivedcompoundref>
    <derivedcompoundref refid="classemail_1_1IntraEmailReceiver" prot="public" virt="non-virtual">email::IntraEmailReceiver</derivedcompoundref>
    <includes local="no">receiver.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classemail_1_1EmailReceiver_1a5bdc7fcdd8d02a1070b8d45d80caf0c3" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="namespaceemail_1a8d76c558a86ae3983f1b8f138c036e61" kindref="member">Logger</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Logger&gt; email::EmailReceiver::logger_</definition>
        <argsstring></argsstring>
        <name>logger_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/receiver.hpp" line="74" column="19" bodyfile="include/email/email/receiver.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classemail_1_1EmailReceiver_1aaea4bf463066dac619bdfad0849f9d40" prot="protected" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool email::EmailReceiver::do_shutdown_</definition>
        <argsstring></argsstring>
        <name>do_shutdown_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/receiver.hpp" line="75" column="20" bodyfile="include/email/email/receiver.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classemail_1_1EmailReceiver_1a72726a74b1cd15878e09b792946db159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>email::EmailReceiver::EmailReceiver</definition>
        <argsstring>()</argsstring>
        <name>EmailReceiver</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/receiver.hpp" line="40" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1EmailReceiver_1a8d5b33a13fa468c0ce8843ffacf950cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual email::EmailReceiver::~EmailReceiver</definition>
        <argsstring>()</argsstring>
        <name>~EmailReceiver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/receiver.hpp" line="43" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1EmailReceiver_1acc9eaabaf2588628089e3a9ddffb7de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void email::EmailReceiver::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <briefdescription>
<para>Shut down. </para>
        </briefdescription>
        <detaileddescription>
<para>Stops any currently-running internal polling loop. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/receiver.hpp" line="51" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classemail_1_1EmailReceiver_1a39b6a8bb1b4ca5da66b76a5a317d6e6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::optional&lt; struct <ref refid="structemail_1_1EmailData" kindref="compound">EmailData</ref> &gt;</type>
        <definition>virtual std::optional&lt;struct EmailData&gt; email::EmailReceiver::get_email</definition>
        <argsstring>(std::optional&lt; std::chrono::nanoseconds &gt; polling_period=std::nullopt)=0</argsstring>
        <name>get_email</name>
        <reimplementedby refid="classemail_1_1CurlEmailReceiver_1a7d020227e4a7e769e886310d6f27f653">get_email</reimplementedby>
        <reimplementedby refid="classemail_1_1IntraEmailReceiver_1a2046c9a7ce1774fa43c0a5dc9cea340a">get_email</reimplementedby>
        <param>
          <type>std::optional&lt; std::chrono::nanoseconds &gt;</type>
          <declname>polling_period</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>Get a new email. </para>
        </briefdescription>
        <detaileddescription>
<para>This function fetches a new email through polling.</para>
<para>The caller can specify a polling period, which will be used as a target polling rate. This means that, if the internal polling call takes more time than the polling period, the next call will be executed right away.</para>
<para>If the polling period value is equal to 0, the sleep call will be skipped, and polling will be done as fast as possible. This is the default value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polling_period</parametername>
</parameternamelist>
<parameterdescription>
<para>the polling period </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new email, or <computeroutput>std::nullopt</computeroutput> if it failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/email/email/receiver.hpp" line="71" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract email receiver. </para>
    </briefdescription>
    <detaileddescription>
<para>Receives, or fetches, emails. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>email::EmailReceiver</label>
        <link refid="classemail_1_1EmailReceiver"/>
      </node>
      <node id="3">
        <label>email::IntraEmailReceiver</label>
        <link refid="classemail_1_1IntraEmailReceiver"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>email::CurlEmailReceiver</label>
        <link refid="classemail_1_1CurlEmailReceiver"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="include/email/email/receiver.hpp" line="35" column="1" bodyfile="include/email/email/receiver.hpp" bodystart="36" bodyend="79"/>
    <listofallmembers>
      <member refid="classemail_1_1EmailReceiver_1aaea4bf463066dac619bdfad0849f9d40" prot="protected" virt="non-virtual"><scope>email::EmailReceiver</scope><name>do_shutdown_</name></member>
      <member refid="classemail_1_1EmailReceiver_1a72726a74b1cd15878e09b792946db159" prot="public" virt="non-virtual"><scope>email::EmailReceiver</scope><name>EmailReceiver</name></member>
      <member refid="classemail_1_1EmailReceiver_1a39b6a8bb1b4ca5da66b76a5a317d6e6b" prot="public" virt="pure-virtual"><scope>email::EmailReceiver</scope><name>get_email</name></member>
      <member refid="classemail_1_1EmailReceiver_1a5bdc7fcdd8d02a1070b8d45d80caf0c3" prot="protected" virt="non-virtual"><scope>email::EmailReceiver</scope><name>logger_</name></member>
      <member refid="classemail_1_1EmailReceiver_1acc9eaabaf2588628089e3a9ddffb7de4" prot="public" virt="non-virtual"><scope>email::EmailReceiver</scope><name>shutdown</name></member>
      <member refid="classemail_1_1EmailReceiver_1a8d5b33a13fa468c0ce8843ffacf950cf" prot="public" virt="virtual"><scope>email::EmailReceiver</scope><name>~EmailReceiver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
