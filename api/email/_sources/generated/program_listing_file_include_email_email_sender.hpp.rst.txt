
.. _program_listing_file_include_email_email_sender.hpp:

Program Listing for File sender.hpp
===================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_email_email_sender.hpp>` (``include/email/email/sender.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // Copyright 2021 Christophe Bedard
   //
   // Licensed under the Apache License, Version 2.0 (the "License");
   // you may not use this file except in compliance with the License.
   // You may obtain a copy of the License at
   //
   //     http://www.apache.org/licenses/LICENSE-2.0
   //
   // Unless required by applicable law or agreed to in writing, software
   // distributed under the License is distributed on an "AS IS" BASIS,
   // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   // See the License for the specific language governing permissions and
   // limitations under the License.
   
   #ifndef EMAIL__EMAIL__SENDER_HPP_
   #define EMAIL__EMAIL__SENDER_HPP_
   
   #include <memory>
   #include <optional>  // NOLINT cpplint mistakes <optional> for a C system header
   
   #include "email/email/info.hpp"
   #include "email/log.hpp"
   #include "email/macros.hpp"
   #include "email/visibility_control.hpp"
   
   namespace email
   {
   
   
   class EmailSender
   {
   public:
     EMAIL_PUBLIC
     EmailSender();
   
     EMAIL_PUBLIC
     virtual ~EmailSender();
   
   
     EMAIL_PUBLIC
     virtual
     bool
     send(
       const struct EmailContent & content,
       std::optional<EmailHeaders> additional_headers = std::nullopt) = 0;
   
   
     EMAIL_PUBLIC
     virtual
     bool
     reply(
       const struct EmailContent & content,
       const struct EmailData & email,
       std::optional<EmailHeaders> additional_headers = std::nullopt) = 0;
   
   protected:
     static
     std::shared_ptr<Logger>
     logger();
   
   private:
     EMAIL_DISABLE_COPY(EmailSender)
   };
   
   }  // namespace email
   
   #endif  // EMAIL__EMAIL__SENDER_HPP_
