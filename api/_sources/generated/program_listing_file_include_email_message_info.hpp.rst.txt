
.. _program_listing_file_include_email_message_info.hpp:

Program Listing for File message_info.hpp
=========================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_email_message_info.hpp>` (``include/email/message_info.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // Copyright 2021 Christophe Bedard
   //
   // Licensed under the Apache License, Version 2.0 (the "License");
   // you may not use this file except in compliance with the License.
   // You may obtain a copy of the License at
   //
   //     http://www.apache.org/licenses/LICENSE-2.0
   //
   // Unless required by applicable law or agreed to in writing, software
   // distributed under the License is distributed on an "AS IS" BASIS,
   // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   // See the License for the specific language governing permissions and
   // limitations under the License.
   
   #ifndef EMAIL__MESSAGE_INFO_HPP_
   #define EMAIL__MESSAGE_INFO_HPP_
   
   #include <optional>  // NOLINT cpplint mistakes <optional> for a C system header
   
   #include "email/communication_info.hpp"
   #include "email/email/info.hpp"
   #include "email/gid.hpp"
   #include "email/timestamp.hpp"
   #include "email/visibility_control.hpp"
   
   namespace email
   {
   
   
   class MessageInfo
   {
   public:
     EMAIL_PUBLIC
     MessageInfo(
       const Timestamp & source_timestamp,
       const Timestamp & received_timestamp,
       const Gid & publisher_gid);
   
     EMAIL_PUBLIC
     MessageInfo(const MessageInfo &) = default;
   
     EMAIL_PUBLIC
     ~MessageInfo();
   
     EMAIL_PUBLIC
     const Timestamp &
     source_timestamp() const;
   
     EMAIL_PUBLIC
     const Timestamp &
     received_timestamp() const;
   
     EMAIL_PUBLIC
     const Gid &
     publisher_gid() const;
   
   
     static
     std::optional<MessageInfo>
     from_headers(const EmailHeaders & headers);
   
     static constexpr auto HEADER_PUBLISHER_GID = "Publisher-GID";
   
   private:
     const CommunicationInfo base_info_;
   };
   
   }  // namespace email
   
   #endif  // EMAIL__MESSAGE_INFO_HPP_
